<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"/>
  </configSections>
  <unity>
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Unity.Interception.Configuration"/>
    <containers>
      <container name="MyFoundationContainer">
        <extension type="Interception"/>
        <register type="MyWebFoundation.Test.Interface.IUserDepartModule,MyWebFoundation.Test.Interface" mapTo="MyWebFoundation.Test.Bussiness.UserDepartModule, MyWebFoundation.Test.Bussiness"/>
        <register type="System.Data.Entity.DbContext, EntityFramework" mapTo="MyWebFoundation.Test.Data.TestDBContext, MyWebFoundation.Test.Data"/>
        <!--<register type="Ruanmou.Bussiness.Interface.ICategoryService,Ruanmou.Bussiness.Interface" mapTo="Ruanmou.Bussiness.Service.CategoryService, Ruanmou.Bussiness.Service">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="MyWebFoundation.Framework.AOP.LogBeforeBehavior, MyWebFoundation.Framework"/>
          <interceptionBehavior type="MyWebFoundation.Framework.AOP.LogAfterBehavior, MyWebFoundation.Framework"/>
        </register>-->
        <register type="MyWebFoundation.Test.Interface.IUserDepartService,MyWebFoundation.Test.Interface" mapTo="MyWebFoundation.Test.Bussiness.UserDepartService, MyWebFoundation.Test.Bussiness"/>
      </container>
    </containers>
  </unity>
</configuration>